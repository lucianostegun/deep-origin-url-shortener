version: '3.8'
services:
  app:
    build:
      context: .
      dockerfile: docker/app/Dockerfile
    ports:
      - '80:5173'
    networks:
      - deeporigin_network
    volumes:
      - ./app:/application
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    environment:
      NODE_ENV: development

  api:
    build:
      context: .
      dockerfile: docker/api/Dockerfile
    ports:
      - '3000:3000'
    networks:
      - deeporigin_network
    volumes:
      - ./api:/application
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    environment:
      NODE_ENV: development
    depends_on:
      database:
        condition: service_healthy

  database:
    image: postgres:17
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=
      - POSTGRES_DB=deeporigin
    ports:
      - '5432:5432'
    networks:
      - deeporigin_network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 256M
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 3
    volumes:
      - deeporigin_postgres_data:/var/lib/postgresql/data

volumes:
  deeporigin_postgres_data:

networks:
  deeporigin_network:
    driver: bridge
